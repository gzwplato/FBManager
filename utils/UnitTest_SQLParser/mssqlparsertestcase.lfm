object MSSQLParserTestData: TMSSQLParserTestData
  OldCreateOrder = False
  Height = 546
  HorizontalOffset = 576
  VerticalOffset = 243
  Width = 625
  object sTriggers: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'DisableTrigger1'
        Lines.Strings = (
          'DISABLE TRIGGER Person.uAddress ON Person.Address;'
        )
      end    
      item
        Caption = 'DisableTrigger2'
        Lines.Strings = (
          'DISABLE TRIGGER safety ON DATABASE;'
        )
      end    
      item
        Caption = 'DisableTrigger3'
        Lines.Strings = (
          'DISABLE Trigger ALL ON ALL SERVER;'
        )
      end    
      item
        Caption = 'DisableTrigger4'
        Lines.Strings = (
          'DISABLE TRIGGER Person.uAddress ON Person.Address;'
        )
      end    
      item
        Caption = 'DisableTrigger5'
        Lines.Strings = (
          'DISABLE TRIGGER safety ON DATABASE;'
          ''
        )
      end    
      item
        Caption = 'EnableTrigger1'
        Lines.Strings = (
          'ENABLE Trigger Person.uAddress ON Person.Address;'
        )
      end    
      item
        Caption = 'EnableTrigger2'
        Lines.Strings = (
          'ENABLE TRIGGER safety ON DATABASE;'
        )
      end    
      item
        Caption = 'EnableTrigger3'
        Lines.Strings = (
          'ENABLE Trigger ALL ON ALL SERVER;'
        )
      end    
      item
        Caption = 'DropTrigger1'
        Lines.Strings = (
          'DROP TRIGGER ProjectTask_HistoryTrigger;'
        )
      end    
      item
        Caption = 'DropTrigger2'
        Lines.Strings = (
          'DROP TRIGGER safety ON DATABASE;'
          ''
          ''
        )
      end    
      item
        Caption = 'DropTrigger3'
        Lines.Strings = (
          'DROP TRIGGER ddl_trig_database ON ALL SERVER;'
        )
      end    
      item
        Caption = 'DropTrigger4'
        Lines.Strings = (
          'DROP TRIGGER safety ON DATABASE;'
        )
      end>
    Left = 48
    Top = 38
  end
  object sDataBase: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'CreateDatabase1'
        Lines.Strings = (
          'CREATE DATABASE testdb'
          'COLLATE SQL_Latin1_General_CP1_CI_AS ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase2'
        Lines.Strings = (
          'CREATE DATABASE [ columnstore ];'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase3'
        Lines.Strings = (
          'CREATE DATABASE SampleDB;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase4'
        Lines.Strings = (
          'CREATE DATABASE mytest;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase5'
        Lines.Strings = (
          'CREATE DATABASE Sales'
          'ON'
          '( NAME = Sales_dat,'
          '    FILENAME = ''C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\saledat.mdf'','
          '    SIZE = 10,'
          '    MAXSIZE = 50,'
          '    FILEGROWTH = 5 )'
          'LOG ON'
          '( NAME = Sales_log,'
          '    FILENAME = ''C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\salelog.ldf'','
          '    SIZE = 5MB,'
          '    MAXSIZE = 25MB,'
          '    FILEGROWTH = 5MB ) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase6'
        Lines.Strings = (
          'CREATE DATABASE Archive'
          'ON'
          'PRIMARY'
          '    (NAME = Arch1,'
          '    FILENAME = ''D:\SalesData\archdat1.mdf'','
          '    SIZE = 100MB,'
          '    MAXSIZE = 200,'
          '    FILEGROWTH = 20),'
          '    ( NAME = Arch2,'
          '    FILENAME = ''D:\SalesData\archdat2.ndf'','
          '    SIZE = 100MB,'
          '    MAXSIZE = 200,'
          '    FILEGROWTH = 20),'
          '    ( NAME = Arch3,'
          '    FILENAME = ''D:\SalesData\archdat3.ndf'','
          '    SIZE = 100MB,'
          '    MAXSIZE = 200,'
          '    FILEGROWTH = 20)'
          'LOG ON'
          '  (NAME = Archlog1,'
          '    FILENAME = ''D:\SalesData\archlog1.ldf'','
          '    SIZE = 100MB,'
          '    MAXSIZE = 200,'
          '    FILEGROWTH = 20),'
          '  (NAME = Archlog2,'
          '    FILENAME = ''D:\SalesData\archlog2.ldf'','
          '    SIZE = 100MB,'
          '    MAXSIZE = 200,'
          '    FILEGROWTH = 20) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase7'
        Lines.Strings = (
          'CREATE DATABASE Sales'
          'ON PRIMARY'
          '( NAME = SPri1_dat,'
          '    FILENAME = ''D:\SalesData\SPri1dat.mdf'','
          '    SIZE = 10,'
          '    MAXSIZE = 50,'
          '    FILEGROWTH = 15% ),'
          '( NAME = SPri2_dat,'
          '    FILENAME = ''D:\SalesData\SPri2dt.ndf'','
          '    SIZE = 10,'
          '    MAXSIZE = 50,'
          '    FILEGROWTH = 15% ),'
          'FILEGROUP SalesGroup1'
          '( NAME = SGrp1Fi1_dat,'
          '    FILENAME = ''D:\SalesData\SG1Fi1dt.ndf'','
          '    SIZE = 10,'
          '    MAXSIZE = 50,'
          '    FILEGROWTH = 5 ),'
          '( NAME = SGrp1Fi2_dat,'
          '    FILENAME = ''D:\SalesData\SG1Fi2dt.ndf'','
          '    SIZE = 10,'
          '    MAXSIZE = 50,'
          '    FILEGROWTH = 5 ),'
          'FILEGROUP SalesGroup2'
          '( NAME = SGrp2Fi1_dat,'
          '    FILENAME = ''D:\SalesData\SG2Fi1dt.ndf'','
          '    SIZE = 10,'
          '    MAXSIZE = 50,'
          '    FILEGROWTH = 5 ),'
          '( NAME = SGrp2Fi2_dat,'
          '    FILENAME = ''D:\SalesData\SG2Fi2dt.ndf'','
          '    SIZE = 10,'
          '    MAXSIZE = 50,'
          '    FILEGROWTH = 5 )'
          'LOG ON'
          '( NAME = Sales_log,'
          '    FILENAME = ''E:\SalesLog\salelog.ldf'','
          '    SIZE = 5MB,'
          '    MAXSIZE = 25MB,'
          '    FILEGROWTH = 5MB ) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase8'
        Lines.Strings = (
          'CREATE DATABASE Archive'
          '  ON (FILENAME = ''D:\SalesData\archdat1.mdf'')'
          '  FOR ATTACH ;'
          ''
        )
      end    
      item
        Caption = 'CreateDatabase9'
        Lines.Strings = (
          'CREATE DATABASE sales_snapshot0600 ON'
          '    ( NAME = SPri1_dat, FILENAME = ''D:\SalesData\SPri1dat_0600.ss''),'
          '    ( NAME = SPri2_dat, FILENAME = ''D:\SalesData\SPri2dt_0600.ss''),'
          '    ( NAME = SGrp1Fi1_dat, FILENAME = ''D:\SalesData\SG1Fi1dt_0600.ss''),'
          '    ( NAME = SGrp1Fi2_dat, FILENAME = ''D:\SalesData\SG1Fi2dt_0600.ss''),'
          '    ( NAME = SGrp2Fi1_dat, FILENAME = ''D:\SalesData\SG2Fi1dt_0600.ss''),'
          '    ( NAME = SGrp2Fi2_dat, FILENAME = ''D:\SalesData\SG2Fi2dt_0600.ss'')'
          'AS SNAPSHOT OF Sales ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase10'
        Lines.Strings = (
          'CREATE DATABASE MyOptionsTest'
          'COLLATE French_CI_AI'
          'WITH TRUSTWORTHY ON, DB_CHAINING ON;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase11'
        Lines.Strings = (
          'CREATE DATABASE AdventureWorks2012 ON'
          '    (FILENAME = ''c:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\Data\AdventureWorks2012_data.mdf''),'
          '    (FILENAME = ''c:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\Data\AdventureWorks2012_log.ldf''),'
          '    (FILENAME = ''c:\myFTCatalogs\AdvWksFtCat'')'
          'FOR ATTACH;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase12'
        Lines.Strings = (
          'CREATE DATABASE [BlobStore1]'
          'CONTAINMENT = NONE'
          'ON PRIMARY'
          '('
          '    NAME = N''BlobStore1'','
          '    FILENAME = N''C:\BlobStore\BlobStore1.mdf'','
          '    SIZE = 100MB,'
          '    MAXSIZE = UNLIMITED,'
          '    FILEGROWTH = 1MB'
          '),'
          'FILEGROUP [FS] CONTAINS FILESTREAM DEFAULT'
          '('
          '    NAME = N''FS1'','
          '    FILENAME = N''C:\BlobStore\FS1'','
          '    MAXSIZE = UNLIMITED'
          '),'
          '('
          '    NAME = N''FS2'','
          '    FILENAME = N''C:\BlobStore\FS2'','
          '    MAXSIZE = 100MB'
          ')'
          'LOG ON'
          '('
          '    NAME = N''BlobStore1_log'','
          '    FILENAME = N''C:\BlobStore\BlobStore1_log.ldf'','
          '    SIZE = 100MB,'
          '    MAXSIZE = 1GB,'
          '    FILEGROWTH = 1MB'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase13'
        Lines.Strings = (
          'CREATE DATABASE AUDIT SPECIFICATION Audit_Pay_Tables'
          'FOR SERVER AUDIT Payrole_Security_Audit'
          'ADD (SELECT , INSERT'
          '     ON HumanResources.EmployeePayHistory BY dbo )'
          'WITH (STATE = ON) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase14'
        Lines.Strings = (
          'CREATE DATABASE AUDIT SPECIFICATION Audit_Data_Modification_On_All_Sales_Tables'
          'FOR SERVER AUDIT DataModification_Security_Audit'
          'ADD ( INSERT, UPDATE, DELETE'
          '     ON Schema::Sales BY SalesUK )'
          'WITH (STATE = ON) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase15'
        Lines.Strings = (
          'CREATE DATABASE ENCRYPTION KEY'
          'WITH ALGORITHM = AES_256'
          'ENCRYPTION BY SERVER CERTIFICATE MyServerCert;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase16'
        Lines.Strings = (
          'CREATE DATABASE SCOPED CREDENTIAL AppCred WITH IDENTITY = ''Mary5'','
          '    SECRET = ''<EnterStrongPasswordHere>'';'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase17'
        Lines.Strings = (
          'CREATE DATABASE SCOPED CREDENTIAL MyCredentials'
          'WITH IDENTITY = ''SHARED ACCESS SIGNATURE'','
          'SECRET = ''QLYMgmSXMklt%2FI1U6DcVrQixnlU5Sgbtk1qDRakUBGs%3D'';'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase18'
        Lines.Strings = (
          'CREATE DATABASE SCOPED CREDENTIAL ADL_User'
          'WITH'
          '    IDENTITY = ''<client_id>@\<OAuth_2.0_Token_EndPoint>'','
          '    SECRET = ''<key>'''
          ';'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase19'
        Lines.Strings = (
          'CREATE DATABASE SCOPED CREDENTIAL OracleProxyAccount'
          'WITH'
          '     IDENTITY = ''oracle_username'','
          '     SECRET = ''oracle_password'' ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase20'
        Lines.Strings = (
          'CREATE DATABASE SCOPED CREDENTIAL HadoopUser1'
          'WITH'
          '     IDENTITY = ''<hadoop_user_name>'','
          '     SECRET = ''<hadoop_password>'' ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase21'
        Lines.Strings = (
          'CREATE DATABASE SCOPED CREDENTIAL AzureStorageCredential'
          'WITH'
          '  IDENTITY = ''<my_account>'' ,'
          '  SECRET = ''<azure_storage_account_key>'' ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase22'
        Lines.Strings = (
          'CREATE DATABASE SCOPED CREDENTIAL AccessAzureInvoices'
          'WITH'
          '  IDENTITY = ''SHARED ACCESS SIGNATURE'','
          '  -- Remove ? from the beginning of the SAS token'
          '  SECRET = ''******srt=sco&sp=rwac&se=2017-02-01T00:55:34Z&st=2016-12-29T16:55:34Z***************'' ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase23'
        Lines.Strings = (
          '     CREATE DATABASE SCOPED CREDENTIAL SqlServerCredentials'
          '     WITH IDENTITY = ''username'', Secret = ''password'';'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase24'
        Lines.Strings = (
          '   CREATE DATABASE SCOPED CREDENTIAL credential_name'
          '   WITH IDENTITY = ''username'', Secret = ''password'';'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase25'
        Lines.Strings = (
          '   CREATE DATABASE SCOPED CREDENTIAL credential_name'
          '   WITH IDENTITY = ''username'', Secret = ''password'';'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase26'
        Lines.Strings = (
          '   CREATE DATABASE SCOPED CREDENTIAL credential_name'
          '   WITH IDENTITY = ''username'', Secret = ''password'';'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase27'
        Lines.Strings = (
          'CREATE DATABASE TestDB;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase28'
        Lines.Strings = (
          'CREATE DATABASE AUDIT SPECIFICATION [FilterForSensitiveData]'
          'FOR SERVER AUDIT [AuditDataAccess]'
          'ADD (SELECT ON SCHEMA::[DataSchema] BY [public])'
          'WITH (STATE = ON);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase29'
        Lines.Strings = (
          'CREATE DATABASE SampleDB;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase30'
        Lines.Strings = (
          'CREATE DATABASE TestSignature ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateDatabase31'
        Lines.Strings = (
          'CREATE DATABASE testDB;'
          ''
          ''
        )
      end>
    Left = 48
    Top = 136
  end
  object sTable: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'CreateTable1'
        Lines.Strings = (
          'CREATE TABLE dbo.T1'
          '('
          '    column_1 AS ''Computed column '' + column_2,'
          '    column_2 varchar(30)'
          '        CONSTRAINT default_name DEFAULT (''my column default''),'
          '    column_3 rowversion,'
          '    column_4 varchar(40) NULL'
          ');'
        )
      end    
      item
        Caption = 'CreateTable2'
        Lines.Strings = (
          'CREATE TABLE dbo.T1 ( column_1 int IDENTITY, column_2 VARCHAR(30));'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable3'
        Lines.Strings = (
          'CREATE TABLE dbo.T1'
          '('
          '    column_1 int IDENTITY,'
          '    column_2 uniqueidentifier,'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable4'
        Lines.Strings = (
          'CREATE TABLE dbo.EmployeeSales'
          '( DataSource   varchar(20) NOT NULL,'
          '  BusinessEntityID   varchar(11) NOT NULL,'
          '  LastName     varchar(40) NOT NULL,'
          '  SalesDollars money NOT NULL'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable5'
        Lines.Strings = (
          'CREATE TABLE HumanResources.NewEmployee'
          '('
          '    EmployeeID int NOT NULL,'
          '    LastName nvarchar(50) NOT NULL,'
          '    FirstName nvarchar(50) NOT NULL,'
          '    PhoneNumber Phone NULL,'
          '    AddressLine1 nvarchar(60) NOT NULL,'
          '    City nvarchar(30) NOT NULL,'
          '    State nchar(3) NOT NULL,'
          '    PostalCode nvarchar(15) NOT NULL,'
          '    CurrentFlag Flag'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable6'
        Lines.Strings = (
          'CREATE TABLE dbo.EmployeeSales'
          '( EmployeeID   nvarchar(11) NOT NULL,'
          '  LastName     nvarchar(20) NOT NULL,'
          '  FirstName    nvarchar(20) NOT NULL,'
          '  YearlySales  money NOT NULL'
          ' );'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable7'
        Lines.Strings = (
          'CREATE TABLE T1 ( column_1 int, column_2 varchar(30));'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable8'
        Lines.Strings = (
          'CREATE TABLE Sales.SalesHistory('
          '    SalesOrderID int NOT NULL,'
          '    SalesOrderDetailID int NOT NULL,'
          '    CarrierTrackingNumber nvarchar(25) NULL,'
          '    OrderQty smallint NOT NULL,'
          '    ProductID int NOT NULL,'
          '    SpecialOfferID int NOT NULL,'
          '    UnitPrice money NOT NULL,'
          '    UnitPriceDiscount money NOT NULL,'
          '    LineTotal money NOT NULL,'
          '    rowguid uniqueidentifier ROWGUIDCOL  NOT NULL,'
          '    ModifiedDate datetime NOT NULL );'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable9'
        Lines.Strings = (
          'CREATE TABLE dbo.EmployeeSales'
          '( EmployeeID   int IDENTITY (1,5)NOT NULL,'
          '  LastName     nvarchar(20) NOT NULL,'
          '  FirstName    nvarchar(20) NOT NULL,'
          '  CurrentSales money NOT NULL,'
          '  ProjectedSales AS CurrentSales * 1.10'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable10'
        Lines.Strings = (
          'CREATE TABLE Production.ZeroInventory (DeletedProductID int, RemovedOnDate DateTime);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable11'
        Lines.Strings = (
          'CREATE TABLE EmployeeTitles'
          '( EmployeeKey   INT NOT NULL,'
          '  LastName     varchar(40) NOT NULL,'
          '  Title      varchar(50) NOT NULL'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable12'
        Lines.Strings = (
          'CREATE TABLE dbo.Table1'
          '    (ColA INT NOT NULL, ColB DECIMAL(10,3) NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable13'
        Lines.Strings = (
          'CREATE TABLE dbo.Table2'
          '    (ColA INT PRIMARY KEY NOT NULL, ColB DECIMAL(10,3) NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable14'
        Lines.Strings = (
          'CREATE TABLE dbo.Table1'
          '    (c1 INT PRIMARY KEY NOT NULL, c2 INT NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable15'
        Lines.Strings = (
          'CREATE TABLE dbo.Table2'
          '    (d1 INT PRIMARY KEY NOT NULL, d2 INT NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable16'
        Lines.Strings = (
          'CREATE TABLE #MyTempTable'
          '    (ExistingCode nchar(3),'
          '     ExistingName nvarchar(50),'
          '     ExistingDate datetime,'
          '     ActionTaken nvarchar(10),'
          '     NewCode nchar(3),'
          '     NewName nvarchar(50),'
          '     NewDate datetime'
          '    );'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable17'
        Lines.Strings = (
          'CREATE TABLE Production.UpdatedInventory'
          '    (ProductID INT NOT NULL, LocationID int, NewQty int, PreviousQty int,'
          '     CONSTRAINT PK_Inventory PRIMARY KEY CLUSTERED (ProductID, LocationID));'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable18'
        Lines.Strings = (
          'CREATE TABLE Person'
          '    ('
          '        ID INTEGER PRIMARY KEY,'
          '        PersonName VARCHAR(100)'
          '    )'
          'AS NODE'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable19'
        Lines.Strings = (
          'CREATE TABLE City'
          '    ('
          '        ID INTEGER PRIMARY KEY,'
          '        CityName VARCHAR(100),'
          '        StateName VARCHAR(100)'
          '    )'
          'AS NODE'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable20'
        Lines.Strings = (
          'CREATE TABLE livesIn'
          '    ('
          '        StreetAddress VARCHAR(100)'
          '    )'
          'AS EDGE'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable21'
        Lines.Strings = (
          'CREATE TABLE #tmpdbs (id INT IDENTITY(1,1), [dbid] INT, [dbname] sysname, isdone BIT);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable22'
        Lines.Strings = (
          'CREATE TABLE #tmpfgs (id INT IDENTITY(1,1), [dbid] INT, [dbname] sysname, fgname sysname, isdone BIT);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable23'
        Lines.Strings = (
          'CREATE TABLE [ staging ] ('
          '     AccountKey              int NOT NULL,'
          '     AccountDescription      nvarchar (50),'
          '     AccountType             nvarchar(50),'
          '     AccountCodeAlternateKey     int'
          '     )'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable24'
        Lines.Strings = (
          'CREATE TABLE cci_target ('
          '     AccountKey              int NOT NULL,'
          '     AccountDescription      nvarchar (50),'
          '     AccountType             nvarchar(50),'
          '     AccountCodeAlternateKey int'
          '     )'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable25'
        Lines.Strings = (
          'CREATE TABLE dbo.FactInternetSales2 ('
          '    ProductKey [int] NOT NULL,'
          '    OrderDateKey [int] NOT NULL,'
          '    DueDateKey [int] NOT NULL,'
          '    ShipDateKey [int] NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable26'
        Lines.Strings = (
          'CREATE TABLE SimpleTable ('
          '    ProductKey [int] NOT NULL,'
          '    OrderDateKey [int] NOT NULL,'
          '    DueDateKey [int] NOT NULL,'
          '    ShipDateKey [int] NOT NULL'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable27'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exa (column_a INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable28'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exc (column_a INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable29'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exd (column_a INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable30'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exz (column_a INT, column_b INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable31'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exe (column_a INT CONSTRAINT column_a_un UNIQUE) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable32'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exf (column_a INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable33'
        Lines.Strings = (
          'CREATE TABLE T1 ('
          '  C1 INT PRIMARY KEY,'
          '  C2 VARCHAR(50) SPARSE NULL,'
          '  C3 INT SPARSE NULL,'
          '  C4 INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable34'
        Lines.Strings = (
          'CREATE TABLE T2 ('
          '  C1 INT PRIMARY KEY,'
          '  C2 VARCHAR(50) NULL,'
          '  C3 INT NULL,'
          '  C4 INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable35'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exb ('
          '     column_a INT,'
          '     column_b VARCHAR(20) NULL,'
          '     column_c DATETIME,'
          '     column_d INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable36'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exc (column_a INT NOT NULL CONSTRAINT my_constraint UNIQUE) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable37'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exc ( column_a INT'
          '                          NOT NULL CONSTRAINT my_constraint UNIQUE'
          '                          ,column_b INT'
          '                          NOT NULL CONSTRAINT my_pk_constraint PRIMARY KEY) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable38'
        Lines.Strings = (
          'CREATE TABLE Person.ContactBackup'
          '    (ContactID INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable39'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exy (column_a INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable40'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exy (col_a varchar(5) UNIQUE NOT NULL, col_b decimal (4,2)) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable41'
        Lines.Strings = (
          'CREATE TABLE T3 ('
          '  C1 INT PRIMARY KEY,'
          '  C2 VARCHAR(50) NULL,'
          '  C3 INT NULL,'
          '  C4 INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable42'
        Lines.Strings = (
          'CREATE TABLE T3 ('
          '  C1 INT PRIMARY KEY,'
          '  C2 VARCHAR(50) NULL,'
          '  C3 INT NULL,'
          '  C4 INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable43'
        Lines.Strings = (
          'CREATE TABLE PartitionTable (col1 INT, col2 CHAR(10))'
          'ON myRangePS1 (col1) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable44'
        Lines.Strings = (
          'CREATE TABLE NonPartitionTable (col1 INT, col2 CHAR(10))'
          'ON test2fg ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable45'
        Lines.Strings = (
          'CREATE TABLE dbo.cnst_example ('
          '  id INT NOT NULL,'
          '  name VARCHAR(10) NOT NULL,'
          '  salary MONEY NOT NULL'
          '  CONSTRAINT salary_cap CHECK (salary < 100000)) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable46'
        Lines.Strings = (
          'CREATE TABLE dbo.trig_example ('
          '  id INT,'
          '  name VARCHAR(12),'
          '  salary MONEY) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable47'
        Lines.Strings = (
          'CREATE TABLE dbo.doc_exy (column_a INT) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable48'
        Lines.Strings = (
          'CREATE TABLE T ('
          '        i int primary key,'
          '        x xml (ManuInstructionsSchemaCollection));'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable49'
        Lines.Strings = (
          'CREATE TABLE SimpleTable('
          '    ProductKey [INT] NOT NULL,'
          '    OrderDateKey [INT] NOT NULL,'
          '    DueDateKey [INT] NOT NULL,'
          '    ShipDateKey [INT] NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable50'
        Lines.Strings = (
          'CREATE TABLE SimpleTable ('
          '    ProductKey [INT] NOT NULL,'
          '    OrderDateKey [INT] NOT NULL,'
          '    DueDateKey [INT] NOT NULL,'
          '    ShipDateKey [INT] NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable51'
        Lines.Strings = (
          'CREATE TABLE SimpleTable ('
          '    ProductKey [INT] NOT NULL,'
          '    OrderDateKey [INT] NOT NULL,'
          '    DueDateKey [INT] NOT NULL,'
          '    ShipDateKey [INT] NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable52'
        Lines.Strings = (
          'CREATE TABLE MyFactTable ('
          '    ProductKey [INT] NOT NULL,'
          '    OrderDateKey [INT] NOT NULL,'
          '     DueDateKey [INT] NOT NULL,'
          '     ShipDateKey [INT] NOT NULL )'
          ')'
          'WITH ('
          '    CLUSTERED INDEX ( ProductKey )'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable53'
        Lines.Strings = (
          'CREATE TABLE SimpleTable'
          '(ProductKey [INT] NOT NULL,'
          'OrderDateKey [INT] NOT NULL,'
          'DueDateKey [INT] NOT NULL,'
          'ShipDateKey [INT] NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable54'
        Lines.Strings = (
          'CREATE TABLE #Test (C1 NVARCHAR(10), C2 NVARCHAR(50), C3 DATETIME);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable55'
        Lines.Strings = (
          'CREATE TABLE #Test (C1 NVARCHAR(10), C2 NVARCHAR(50), C3 DATETIME);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable56'
        Lines.Strings = (
          'CREATE TABLE Tbl ( id INT PRIMARY KEY, xmlcol XML );'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable57'
        Lines.Strings = (
          'CREATE TABLE DataSchema.GeneralData (ID int PRIMARY KEY, DataField varchar(50) NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable58'
        Lines.Strings = (
          'CREATE TABLE DataSchema.SensitiveData (ID int PRIMARY KEY, DataField varchar(50) NOT NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable59'
        Lines.Strings = (
          'CREATE TABLE SpatialTable(id int primary key, geometry_col geometry);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable60'
        Lines.Strings = (
          'CREATE TABLE SpatialTable2(id int primary key, object GEOGRAPHY);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable61'
        Lines.Strings = (
          'CREATE TABLE dbo.Employee ('
          '    EmployeeID INT PRIMARY KEY CLUSTERED'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable62'
        Lines.Strings = (
          'CREATE TABLE dbo.PurchaseOrderDetail'
          '('
          '    PurchaseOrderID int NOT NULL'
          '        REFERENCES Purchasing.PurchaseOrderHeader(PurchaseOrderID),'
          '    LineNumber smallint NOT NULL,'
          '    ProductID int NULL'
          '        REFERENCES Production.Product(ProductID),'
          '    UnitPrice money NULL,'
          '    OrderQty smallint NULL,'
          '    ReceivedQty float NULL,'
          '    RejectedQty float NULL,'
          '    DueDate datetime NULL,'
          '    rowguid uniqueidentifier ROWGUIDCOL NOT NULL'
          '        CONSTRAINT DF_PurchaseOrderDetail_rowguid DEFAULT (NEWID()),'
          '    ModifiedDate datetime NOT NULL'
          '        CONSTRAINT DF_PurchaseOrderDetail_ModifiedDate DEFAULT (GETDATE()),'
          '    LineTotal AS ((UnitPrice*OrderQty)),'
          '    StockedQty AS ((ReceivedQty-RejectedQty)),'
          '    CONSTRAINT PK_PurchaseOrderDetail_PurchaseOrderID_LineNumber'
          '               PRIMARY KEY CLUSTERED (PurchaseOrderID, LineNumber)'
          '               WITH (IGNORE_DUP_KEY = OFF)'
          ')'
          'ON PRIMARY;'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable63'
        Lines.Strings = (
          'CREATE TABLE HumanResources.EmployeeResumes'
          '('
          '    LName nvarchar(25),'
          '    FName nvarchar(25),'
          '    Resume xml(DOCUMENT HumanResources.HRResumeSchemaCollection)'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable64'
        Lines.Strings = (
          'CREATE TABLE PartitionTable (col1 int, col2 char(10))'
          '    ON myRangePS1 (col1);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable65'
        Lines.Strings = (
          'CREATE TABLE dbo.Globally_Unique_Data'
          '('
          '    GUID UNIQUEIDENTIFIER'
          '        CONSTRAINT Guid_Default DEFAULT'
          '        NEWSEQUENTIALID() ROWGUIDCOL,'
          '    Employee_Name VARCHAR(60)'
          '    CONSTRAINT Guid_PK PRIMARY KEY (GUID)'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable66'
        Lines.Strings = (
          'CREATE TABLE dbo.mytable'
          '('
          '    low INT,'
          '    high INT,'
          '    myavg AS (low + high)/2'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable67'
        Lines.Strings = (
          'CREATE TABLE UDTypeTable'
          '('
          '    u UTF8STRING,'
          '    ustr AS u.ToString() PERSISTED'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable68'
        Lines.Strings = (
          'CREATE TABLE dbo.mylogintable'
          '('
          '    date_in DATETIME,'
          '    user_id INT,'
          '    myuser_name AS USER_NAME()'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable69'
        Lines.Strings = (
          'CREATE TABLE dbo.EmployeePhoto'
          '('
          '    EmployeeId INT NOT NULL PRIMARY KEY,'
          '    Photo VARBINARY(MAX) FILESTREAM NULL,'
          '    MyRowGuidColumn UNIQUEIDENTIFIER NOT NULL ROWGUIDCOL UNIQUE DEFAULT NEWID()'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable70'
        Lines.Strings = (
          'CREATE TABLE dbo.T1'
          '('
          '    c1 INT,'
          '    c2 NVARCHAR(200)'
          ')'
          'WITH (DATA_COMPRESSION = ROW);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable71'
        Lines.Strings = (
          'CREATE TABLE dbo.T1'
          '('
          '    c1 INT PRIMARY KEY,'
          '    c2 VARCHAR(50) SPARSE NULL'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable72'
        Lines.Strings = (
          'CREATE TABLE T1'
          '('
          '    c1 INT PRIMARY KEY,'
          '    c2 VARCHAR(50) SPARSE NULL,'
          '    c3 INT SPARSE NULL,'
          '    CSet XML COLUMN_SET FOR ALL_SPARSE_COLUMNS'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable73'
        Lines.Strings = (
          'CREATE TABLE T1'
          '('
          '    c1 INT PRIMARY KEY,'
          '    c2 VARCHAR(50) SPARSE NULL,'
          '    c3 INT SPARSE NULL,'
          '    CSet XML COLUMN_SET FOR ALL_SPARSE_COLUMNS'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable74'
        Lines.Strings = (
          'CREATE TABLE Department'
          '('
          '    DepartmentNumber CHAR(10) NOT NULL PRIMARY KEY CLUSTERED,'
          '    DepartmentName VARCHAR(50) NOT NULL,'
          '    ManagerID INT NULL,'
          '    ParentDepartmentNumber CHAR(10) NULL,'
          '    SysStartTime DATETIME2 GENERATED ALWAYS AS ROW START HIDDEN NOT NULL,'
          '    SysEndTime DATETIME2 GENERATED ALWAYS AS ROW END HIDDEN NOT NULL,'
          '    PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime)'
          ')'
          'WITH (SYSTEM_VERSIONING = ON);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable75'
        Lines.Strings = (
          'CREATE TABLE Department_History'
          '('
          '    DepartmentNumber CHAR(10) NOT NULL,'
          '    DepartmentName VARCHAR(50) NOT NULL,'
          '    ManagerID INT NULL,'
          '    ParentDepartmentNumber CHAR(10) NULL,'
          '    SysStartTime DATETIME2 NOT NULL,'
          '    SysEndTime DATETIME2 NOT NULL'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable76'
        Lines.Strings = (
          'CREATE TABLE Department'
          '('
          '    DepartmentNumber CHAR(10) NOT NULL PRIMARY KEY CLUSTERED,'
          '    DepartmentName VARCHAR(50) NOT NULL,'
          '    ManagerID INT NULL,'
          '    ParentDepartmentNumber CHAR(10) NULL,'
          '    SysStartTime DATETIME2 GENERATED ALWAYS AS ROW START HIDDEN NOT NULL,'
          '    SysEndTime DATETIME2 GENERATED ALWAYS AS ROW END HIDDEN NOT NULL,'
          '    PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime)'
          ')'
          'WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE = dbo.Department_History, DATA_CONSISTENCY_CHECK = ON));'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable77'
        Lines.Strings = (
          'CREATE TABLE dbo.Department'
          '('
          '    DepartmentNumber CHAR(10) NOT NULL PRIMARY KEY NONCLUSTERED,'
          '    DepartmentName VARCHAR(50) NOT NULL,'
          '    ManagerID INT NULL,'
          '    ParentDepartmentNumber CHAR(10) NULL,'
          '    SysStartTime DATETIME2 GENERATED ALWAYS AS ROW START HIDDEN NOT NULL,'
          '    SysEndTime DATETIME2 GENERATED ALWAYS AS ROW END HIDDEN NOT NULL,'
          '    PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime)'
          ')'
          'WITH'
          '('
          '    MEMORY_OPTIMIZED = ON,'
          '    DURABILITY = SCHEMA_AND_DATA,'
          '    SYSTEM_VERSIONING = ON (HISTORY_TABLE = History.DepartmentHistory)'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable78'
        Lines.Strings = (
          'CREATE TABLE Department_History'
          '('
          '    DepartmentNumber CHAR(10) NOT NULL,'
          '    DepartmentName VARCHAR(50) NOT NULL,'
          '    ManagerID INT NULL,'
          '    ParentDepartmentNumber CHAR(10) NULL,'
          '    SysStartTime DATETIME2 NOT NULL,'
          '    SysEndTime DATETIME2 NOT NULL'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable79'
        Lines.Strings = (
          'CREATE TABLE Department'
          '('
          '    DepartmentNumber CHAR(10) NOT NULL PRIMARY KEY CLUSTERED,'
          '    DepartmentName VARCHAR(50) NOT NULL,'
          '    ManagerID INT NULL,'
          '    ParentDepartmentNumber CHAR(10) NULL,'
          '    SysStartTime DATETIME2 GENERATED ALWAYS AS ROW START HIDDEN NOT NULL,'
          '    SysEndTime DATETIME2 GENERATED ALWAYS AS ROW END HIDDEN NOT NULL,'
          '    PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime)'
          ')'
          'WITH'
          '('
          '    SYSTEM_VERSIONING = ON (HISTORY_TABLE = dbo.Department_History, DATA_CONSISTENCY_CHECK = ON)'
          ');'
          ''
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable80'
        Lines.Strings = (
          'CREATE TABLE Customers ('
          '    CustName NVARCHAR(60)'
          '        ENCRYPTED WITH ('
          '            COLUMN_ENCRYPTION_KEY = MyCEK,'
          '            ENCRYPTION_TYPE = RANDOMIZED,'
          '            ALGORITHM = ''AEAD_AES_256_CBC_HMAC_SHA_256'''
          '        ),'
          '    SSN VARCHAR(11) COLLATE Latin1_General_BIN2'
          '        ENCRYPTED WITH ('
          '            COLUMN_ENCRYPTION_KEY = MyCEK,'
          '            ENCRYPTION_TYPE = DETERMINISTIC ,'
          '            ALGORITHM = ''AEAD_AES_256_CBC_HMAC_SHA_256'''
          '        ),'
          '    Age INT NULL'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable81'
        Lines.Strings = (
          'CREATE TABLE t1'
          '('
          '    c1 INT,'
          '    index IX1 (c1) WHERE c1 > 0'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable82'
        Lines.Strings = (
          'CREATE TABLE t1'
          '('
          '    c1 INT,'
          '    INDEX ix_1 NONCLUSTERED (c1)'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable83'
        Lines.Strings = (
          'CREATE TABLE t2'
          '('
          '    c1 INT,'
          '    c2 INT INDEX ix_1 NONCLUSTERED'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable84'
        Lines.Strings = (
          'CREATE TABLE t3'
          '('
          '    c1 INT,'
          '    c2 INT,'
          '    INDEX ix_1 NONCLUSTERED (c1,c2)'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable85'
        Lines.Strings = (
          'CREATE TABLE #tmp'
          '('
          '    c1 INT,'
          '    c2 INT,'
          '    PRIMARY KEY CLUSTERED ([c1], [c2])'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable86'
        Lines.Strings = (
          'CREATE TABLE new_employees'
          '('
          ' id_num int IDENTITY(1,1),'
          ' fname varchar (20),'
          ' minit char(1),'
          ' lname varchar(30)'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable87'
        Lines.Strings = (
          'CREATE TABLE img (id_num INT IDENTITY(1,1), company_name sysname);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable88'
        Lines.Strings = (
          'CREATE TABLE dbo.SUPPLY1 ('
          'supplyID INT PRIMARY KEY CHECK (supplyID BETWEEN 1 and 150),'
          'supplier CHAR(50)'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable89'
        Lines.Strings = (
          'CREATE TABLE dbo.SUPPLY2 ('
          'supplyID INT PRIMARY KEY CHECK (supplyID BETWEEN 151 and 300),'
          'supplier CHAR(50)'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable90'
        Lines.Strings = (
          'CREATE TABLE dbo.SUPPLY3 ('
          'supplyID INT PRIMARY KEY CHECK (supplyID BETWEEN 301 and 450),'
          'supplier CHAR(50)'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable91'
        Lines.Strings = (
          'CREATE TABLE dbo.SUPPLY4 ('
          'supplyID INT PRIMARY KEY CHECK (supplyID BETWEEN 451 and 600),'
          'supplier CHAR(50)'
          ');'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable92'
        Lines.Strings = (
          'CREATE TABLE T ('
          '        i int primary key,'
          '        x xml (ManuInstructionsSchemaCollection));'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable93'
        Lines.Strings = (
          'CREATE TABLE T (Col1 xml (mySC));'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable94'
        Lines.Strings = (
          'CREATE TABLE #temptable (col1 INT);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable95'
        Lines.Strings = (
          'CREATE TABLE T1 (Col1 INT);'
          ''
          ''
        )
      end    
      item
        Caption = 'CreateTable96'
        Lines.Strings = (
          'CREATE TABLE T1 (c VARCHAR(11));'
          ''
          ''
        )
      end>
    Left = 48
    Top = 224
  end
  object sDML: TRxTextHolder
    Highlighter = rxSynSQL
    Items = <    
      item
        Caption = 'Select1'
        Lines.Strings = (
          'SELECT *'
          'FROM DimEmployee'
          'ORDER BY LastName;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select2'
        Lines.Strings = (
          'SELECT e.*'
          'FROM DimEmployee AS e'
          'ORDER BY LastName;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select3'
        Lines.Strings = (
          'SELECT FirstName, LastName, StartDate AS FirstDay'
          'FROM DimEmployee'
          'ORDER BY LastName;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select4'
        Lines.Strings = (
          'SELECT FirstName, LastName, StartDate AS FirstDay'
          'FROM DimEmployee'
          'WHERE EndDate IS NOT NULL'
          'AND MaritalStatus = ''M'''
          'ORDER BY LastName;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select5'
        Lines.Strings = (
          'SELECT FirstName, LastName, BaseRate, BaseRate * 40 AS GrossPay'
          'FROM DimEmployee'
          'ORDER BY LastName;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select6'
        Lines.Strings = (
          'SELECT DISTINCT Title'
          'FROM DimEmployee'
          'ORDER BY Title;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select7'
        Lines.Strings = (
          'SELECT OrderDateKey, SUM(SalesAmount) AS TotalSales'
          'FROM FactInternetSales'
          'GROUP BY OrderDateKey'
          'ORDER BY OrderDateKey;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select8'
        Lines.Strings = (
          'SELECT OrderDateKey, PromotionKey, AVG(SalesAmount) AS AvgSales, SUM(SalesAmount) AS TotalSales'
          'FROM FactInternetSales'
          'GROUP BY OrderDateKey, PromotionKey'
          'ORDER BY OrderDateKey;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select9'
        Lines.Strings = (
          'SELECT SUM(SalesAmount) AS TotalSales'
          'FROM FactInternetSales'
          'GROUP BY (OrderDateKey * 10);'
          ''
          ''
        )
      end    
      item
        Caption = 'Select10'
        Lines.Strings = (
          'SELECT OrderDateKey, SUM(SalesAmount) AS TotalSales'
          'FROM FactInternetSales'
          'GROUP BY OrderDateKey'
          'ORDER BY OrderDateKey;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select11'
        Lines.Strings = (
          'SELECT OrderDateKey, SUM(SalesAmount) AS TotalSales'
          'FROM FactInternetSales'
          'GROUP BY OrderDateKey'
          'HAVING OrderDateKey > 20010000'
          'ORDER BY OrderDateKey;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select12'
        Lines.Strings = (
          'SELECT COUNT(*) AS [Rows in Table]'
          'FROM Sales.ShoppingCartItem'
          'WHERE ShoppingCartID = 20621;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select13'
        Lines.Strings = (
          'SELECT ProductID, ProductName, ProductModelID, PhotoID'
          'FROM @MyTableVar'
          'ORDER BY ProductModelID;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select14'
        Lines.Strings = (
          'SELECT column_1, column_2, column_3, column_4'
          'FROM dbo.T1;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select15'
        Lines.Strings = (
          'SELECT DataSource,BusinessEntityID,LastName,SalesDollars'
          'FROM dbo.EmployeeSales;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select16'
        Lines.Strings = (
          'SELECT NewScrapReasonID, Name, ModifiedDate FROM @MyTableVar;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select17'
        Lines.Strings = (
          'SELECT ScrapReasonID, Name, ModifiedDate'
          'FROM Production.ScrapReason;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select18'
        Lines.Strings = (
          'SELECT EmployeeID, LastName, FirstName, CurrentSales, ProjectedSales'
          'FROM dbo.EmployeeSales;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select19'
        Lines.Strings = (
          'SELECT UnitMeasureCode, Name FROM Production.UnitMeasure'
          'WHERE UnitMeasureCode = ''ABC'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select20'
        Lines.Strings = (
          'SELECT Change, COUNT(*) AS CountPerChange'
          'FROM @SummaryOfChanges'
          'GROUP BY Change;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select21'
        Lines.Strings = (
          'SELECT PersonName, CityName, StreetAddress'
          'FROM Person , City , livesIn'
          'WHERE MATCH(Person-(livesIn)->city)'
          ''
          ''
        )
      end    
      item
        Caption = 'Select22'
        Lines.Strings = (
          'SELECT name, physical_name'
          'FROM sys.master_files'
          'WHERE database_id = DB_ID(''tempdb'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Select23'
        Lines.Strings = (
          'SELECT name, snapshot_isolation_state,'
          '    snapshot_isolation_state_desc AS description'
          'FROM sys.databases'
          'WHERE name = N''[database_name]'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select24'
        Lines.Strings = (
          'SELECT * FROM sys.dm_xe_sessions;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select25'
        Lines.Strings = (
          'SELECT * FROM sys.dm_xe_session_events;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select26'
        Lines.Strings = (
          'SELECT FULLTEXTCATALOGPROPERTY(''ftCatalog'', ''accentsensitivity'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Select27'
        Lines.Strings = (
          'SELECT TOP 300000 * FROM staging;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select28'
        Lines.Strings = (
          'SELECT *'
          'FROM sys.dm_db_column_store_row_group_physical_stats'
          'WHERE object_id  = object_id(''cci_target'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Select29'
        Lines.Strings = (
          'SELECT *'
          'FROM sys.dm_db_index_physical_stats (DB_ID(),OBJECT_ID(N''Production.TransactionHistory''), NULL , NULL, NULL);'
          ''
          ''
        )
      end    
      item
        Caption = 'Select30'
        Lines.Strings = (
          'SELECT sys.types.name, sys.types.schema_id, sys.schemas.name'
          '    FROM sys.types JOIN sys.schemas'
          '        ON sys.types.schema_id = sys.schemas.schema_id'
          '    WHERE sys.types.name = ''TestType'' ;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select31'
        Lines.Strings = (
          'SELECT NEXT VALUE FOR Test.CountBy1'
          ''
          ''
        )
      end    
      item
        Caption = 'Select32'
        Lines.Strings = (
          'SELECT NEXT VALUE FOR Test.CountBy1;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select33'
        Lines.Strings = (
          'SELECT SRM.role_principal_id, SP.name AS Role_Name,'
          'SRM.member_principal_id, SP2.name  AS Member_Name'
          'FROM sys.server_role_members AS SRM'
          'JOIN sys.server_principals AS SP'
          '    ON SRM.Role_principal_id = SP.principal_id'
          'JOIN sys.server_principals AS SP2'
          '    ON SRM.member_principal_id = SP2.principal_id'
          'ORDER BY  SP.name,  SP2.name'
          ''
          ''
          ''
        )
      end    
      item
        Caption = 'Select34'
        Lines.Strings = (
          'SELECT name, TYPE_NAME(system_type_id), max_length, precision, scale'
          'FROM sys.columns WHERE object_id = OBJECT_ID(N''dbo.doc_exy'') ;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select35'
        Lines.Strings = (
          'SELECT name, TYPE_NAME(system_type_id), max_length, precision, scale'
          'FROM sys.columns WHERE object_id = OBJECT_ID(N''dbo.doc_exy'') ;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select36'
        Lines.Strings = (
          'SELECT *'
          'FROM sys.xml_schema_collections;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select37'
        Lines.Strings = (
          'SELECT name'
          'FROM sys.xml_schema_namespaces;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select38'
        Lines.Strings = (
          'SELECT sys.xml_schema_collections.name'
          'FROM   sys.xml_schema_collections'
          'JOIN   sys.xml_schema_namespaces'
          'ON     sys.xml_schema_collections.xml_collection_id ='
          '       sys.xml_schema_namespaces.xml_collection_id'
          'WHERE  sys.xml_schema_namespaces.name='''';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select39'
        Lines.Strings = (
          'SELECT query = a.text, start_time, percent_complete,'
          '    eta = dateadd(second,estimated_completion_time/1000, getdate())'
          'FROM sys.dm_exec_requests r'
          '    CROSS APPLY sys.dm_exec_sql_text(r.sql_handle) a'
          'WHERE r.command LIKE ''BACKUP%'''
          ''
          ''
        )
      end    
      item
        Caption = 'Select40'
        Lines.Strings = (
          'SELECT i.name'
          'FROM sys.indexes i'
          'JOIN sys.tables t'
          'ON ( i.type_desc = ''CLUSTERED'' ) WHERE t.name = ''MyFactTable'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select41'
        Lines.Strings = (
          'SELECT i.name'
          'FROM sys.indexes i'
          'JOIN sys.tables t'
          'ON ( i.type_desc = ''CLUSTERED'' )'
          'WHERE t.name = ''MyFactTable'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select42'
        Lines.Strings = (
          'SELECT i.object_id, i.name, t.object_id, t.name'
          'FROM sys.indexes i'
          'JOIN sys.tables t'
          'ON (i.type_desc = ''CLUSTERED COLUMNSTORE'')'
          'WHERE t.name = ''RowstoreDimTable'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select43'
        Lines.Strings = (
          'SELECT name, size, size*1.0/128 AS [Size in MBs]'
          'FROM sys.master_files'
          'WHERE name = N''mytest'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select44'
        Lines.Strings = (
          'SELECT name, collation_name, is_trustworthy_on, is_db_chaining_on'
          'FROM sys.databases'
          'WHERE name = N''MyOptionsTest'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select45'
        Lines.Strings = (
          'SELECT name'
          '    FROM sys.all_objects'
          '    WHERE'
          '        (name LIKE ''database\_%'' { ESCAPE ''\ '' } OR'
          '         name LIKE ''server\_%'' { ESCAPE ''\ '' })'
          '        AND name LIKE ''%\_event%'' { ESCAPE ''\ '' }'
          '        AND type = ''V'''
          '    ORDER BY name;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select46'
        Lines.Strings = (
          'SELECT TOP 10 (url) FROM ClickStream WHERE user_ip = ''xxx.xxx.xxx.xxx'''
          ''
          ''
        )
      end    
      item
        Caption = 'Select47'
        Lines.Strings = (
          ''
          'SELECT DISTINCT user.FirstName, user.LastName'
          'INTO ms_user'
          'FROM user INNER JOIN ('
          '    SELECT * FROM ClickStream WHERE cs.url = ''www.microsoft.com'''
          '    ) AS ms'
          'ON user.user_ip = ms.user_ip'
          ';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select48'
        Lines.Strings = (
          'SELECT dbo.ISOweek(CONVERT(DATETIME,''12/26/2004'',101)) AS ''ISO Week'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select49'
        Lines.Strings = (
          'SELECT @SamplesPath = REPLACE'
          '    (  physical_name'
          '     , ''Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\master.mdf'''
          '     , ''Microsoft SQL Server\130\Samples\Engine\Programmability\CLR\ '''
          '    )'
          '  FROM master.sys.database_files'
          '  WHERE name = ''master'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Select50'
        Lines.Strings = (
          'SELECT definition, type'
          'FROM sys.sql_modules AS m'
          'JOIN sys.objects AS o ON m.object_id = o.object_id'
          '    AND type IN (''FN'', ''IF'', ''TF'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Select51'
        Lines.Strings = (
          'SELECT COUNT(*) AS [Number of rows] FROM #Test;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select52'
        Lines.Strings = (
          'SELECT COUNT(*) AS [Number of rows] FROM #Test;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select53'
        Lines.Strings = (
          'SELECT SUM(UnitPrice * OrderQty * (1.00 - UnitPriceDiscount)) AS Rev,'
          '  OrderDate, ProductID'
          'FROM Sales.SalesOrderDetail AS od'
          '  JOIN Sales.SalesOrderHeader AS o ON od.SalesOrderID = o.SalesOrderID'
          '    AND ProductID BETWEEN 700 AND 800'
          '    AND OrderDate >= CONVERT(DATETIME, ''05/01/2002'', 101)'
          'GROUP BY OrderDate, ProductID'
          'ORDER BY Rev DESC;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select54'
        Lines.Strings = (
          'SELECT OrderDate, SUM(UnitPrice * OrderQty * (1.00 - UnitPriceDiscount)) AS Rev'
          'FROM Sales.SalesOrderDetail AS od'
          '  JOIN Sales.SalesOrderHeader AS o ON od.SalesOrderID = o.SalesOrderID'
          '    AND DATEPART(mm, OrderDate) = 3'
          '  AND DATEPART(yy, OrderDate) = 2002'
          'GROUP BY OrderDate'
          'ORDER BY OrderDate ASC;'
          ''
          ''
        )
      end    
      item
        Caption = 'Select55'
        Lines.Strings = (
          'SELECT * FROM fn_get_audit_file(''C:\SQLAudit\AuditDataAccess_*.sqlaudit'',default,default);'
          ''
          ''
        )
      end    
      item
        Caption = 'Select56'
        Lines.Strings = (
          'SELECT SUSER_NAME(), USER_NAME();'
          ''
          ''
        )
      end    
      item
        Caption = 'Select57'
        Lines.Strings = (
          'SELECT @cookie;'
          ''
          ''
        )
      end    
      item
        Caption = 'BulkInsert1'
        Lines.Strings = (
          'BULK INSERT Sales.Orders'
          'FROM ''\\SystemX\DiskZ\Sales\data\orders.dat'';'
          ''
          ''
        )
      end    
      item
        Caption = 'BulkInsert2'
        Lines.Strings = (
          'BULK INSERT Sales.Orders'
          'FROM ''\\SystemX\DiskZ\Sales\data\orders.csv'''
          'WITH ( FORMAT=''CSV'');'
          ''
          ''
        )
      end    
      item
        Caption = 'BulkInsert3'
        Lines.Strings = (
          'BULK INSERT bulktest..t_float'
          'FROM ''C:\t_float-c.dat'' WITH (FORMATFILE=''C:\t_floatformat-c-xml.xml'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete1'
        Lines.Strings = (
          'DELETE FROM Sales.SalesPersonQuotaHistory;'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete2'
        Lines.Strings = (
          'DELETE FROM Production.ProductCostHistory'
          'WHERE StandardCost > 1000.00;'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete3'
        Lines.Strings = (
          'DELETE Production.ProductCostHistory'
          'WHERE StandardCost BETWEEN 12.00 AND 14.00'
          '      AND EndDate IS NULL;'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete4'
        Lines.Strings = (
          'DELETE FROM HumanResources.EmployeePayHistory'
          'WHERE CURRENT OF complex_cursor;'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete5'
        Lines.Strings = (
          'DELETE FROM Sales.SalesPersonQuotaHistory'
          'WHERE BusinessEntityID IN'
          '    (SELECT BusinessEntityID'
          '     FROM Sales.SalesPerson'
          '     WHERE SalesYTD > 2500000.00);'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete6'
        Lines.Strings = (
          'DELETE FROM Sales.SalesPersonQuotaHistory'
          'FROM Sales.SalesPersonQuotaHistory AS spqh'
          'INNER JOIN Sales.SalesPerson AS sp'
          'ON spqh.BusinessEntityID = sp.BusinessEntityID'
          'WHERE sp.SalesYTD > 2500000.00;'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete7'
        Lines.Strings = (
          ''
          'DELETE spqh'
          '  FROM'
          '        Sales.SalesPersonQuotaHistory AS spqh'
          '    INNER JOIN Sales.SalesPerson AS sp'
          '        ON spqh.BusinessEntityID = sp.BusinessEntityID'
          '  WHERE  sp.SalesYTD > 2500000.00;'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete8'
        Lines.Strings = (
          'DELETE TOP (20)'
          'FROM Purchasing.PurchaseOrderDetail'
          'WHERE DueDate < ''20020701'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete9'
        Lines.Strings = (
          ''
          ''
          'DELETE FROM Purchasing.PurchaseOrderDetail'
          'WHERE PurchaseOrderDetailID IN'
          '   (SELECT TOP 10 PurchaseOrderDetailID'
          '    FROM Purchasing.PurchaseOrderDetail'
          '    ORDER BY DueDate ASC);'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete10'
        Lines.Strings = (
          ''
          'DELETE MyLinkServer.AdventureWorks2012.HumanResources.Department'
          'WHERE DepartmentID > 16;'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete11'
        Lines.Strings = (
          'DELETE FROM OPENDATASOURCE(''SQLNCLI'','
          '    ''Data Source= <server_name>; Integrated Security=SSPI'')'
          '    .AdventureWorks2012.HumanResources.Department'
          'WHERE DepartmentID = 17;'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete12'
        Lines.Strings = (
          'DELETE Sales.ShoppingCartItem'
          'OUTPUT DELETED.*'
          'WHERE ShoppingCartID = 20621;'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete13'
        Lines.Strings = (
          'DELETE Production.ProductProductPhoto'
          'OUTPUT DELETED.ProductID,'
          '       p.Name,'
          '       p.ProductModelID,'
          '       DELETED.ProductPhotoID'
          '    INTO @MyTableVar'
          'FROM Production.ProductProductPhoto AS ph'
          'JOIN Production.Product as p'
          '    ON ph.ProductID = p.ProductID'
          '    WHERE p.ProductModelID BETWEEN 120 and 130;'
          ''
          ''
        )
      end    
      item
        Caption = 'Delete14'
        Lines.Strings = (
          'DELETE FROM Production.UnitMeasure WHERE UnitMeasureCode IN (''ABC'',''XYZ'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert1'
      end    
      item
        Caption = 'Insert2'
        Lines.Strings = (
          'INSERT INTO Cities (Location)'
          'VALUES ( CONVERT(Point, ''12.3:46.2'') );'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert3'
        Lines.Strings = (
          'INSERT INTO Cities (Location)'
          'VALUES ( dbo.CreateNewPoint(x, y) );'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert4'
        Lines.Strings = (
          'INSERT INTO Production.UnitMeasure'
          'VALUES (N''FT'', N''Feet'', ''20080414'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert5'
        Lines.Strings = (
          'INSERT INTO Production.UnitMeasure'
          'VALUES (N''FT2'', N''Square Feet '', ''20080923''), (N''Y'', N''Yards'', ''20080923'')'
          '    , (N''Y3'', N''Cubic Yards'', ''20080923'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert6'
        Lines.Strings = (
          'INSERT INTO Production.UnitMeasure (Name, UnitMeasureCode,'
          '    ModifiedDate)'
          'VALUES (N''Square Yards'', N''Y2'', GETDATE());'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert7'
        Lines.Strings = (
          'INSERT INTO dbo.T1 (column_4)'
          '    VALUES (''Explicit value'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert8'
        Lines.Strings = (
          'INSERT INTO dbo.T1 (column_2, column_4)'
          '    VALUES (''Explicit value'', ''Explicit value'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert9'
        Lines.Strings = (
          'INSERT INTO dbo.T1 (column_2)'
          '    VALUES (''Explicit value'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert10'
        Lines.Strings = (
          'INSERT INTO T1 DEFAULT VALUES;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert11'
        Lines.Strings = (
          'INSERT T1 VALUES (''Row #1'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert12'
        Lines.Strings = (
          'INSERT T1 (column_2) VALUES (''Row #2'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert13'
        Lines.Strings = (
          'INSERT INTO T1 (column_1,column_2)'
          '    VALUES (-99, ''Explicit identity value'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert14'
        Lines.Strings = (
          'INSERT INTO dbo.T1 (column_2)'
          '    VALUES (NEWID());'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert15'
        Lines.Strings = (
          'INSERT INTO T1 DEFAULT VALUES;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert16'
        Lines.Strings = (
          'INSERT INTO dbo.Points (PointValue) VALUES (CONVERT(Point, ''3,4''));'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert17'
        Lines.Strings = (
          'INSERT INTO dbo.Points (PointValue) VALUES (CONVERT(Point, ''1,5''));'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert18'
        Lines.Strings = (
          'INSERT INTO dbo.Points (PointValue) VALUES (CAST (''1,99'' AS Point));'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert19'
        Lines.Strings = (
          'INSERT INTO dbo.EmployeeSales'
          '    SELECT ''SELECT'', sp.BusinessEntityID, c.LastName, sp.SalesYTD'
          '    FROM Sales.SalesPerson AS sp'
          '    INNER JOIN Person.Person AS c'
          '        ON sp.BusinessEntityID = c.BusinessEntityID'
          '    WHERE sp.BusinessEntityID LIKE ''2%'''
          '    ORDER BY sp.BusinessEntityID, c.LastName;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert20'
        Lines.Strings = (
          'INSERT INTO dbo.EmployeeSales'
          'EXECUTE dbo.uspGetEmployeeSales;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert21'
        Lines.Strings = (
          'INSERT INTO dbo.EmployeeSales'
          'EXECUTE'
          '('''
          'SELECT ''''EXEC STRING'''', sp.BusinessEntityID, c.LastName,'
          '    sp.SalesYTD'
          '    FROM Sales.SalesPerson AS sp'
          '    INNER JOIN Person.Person AS c'
          '        ON sp.BusinessEntityID = c.BusinessEntityID'
          '    WHERE sp.BusinessEntityID LIKE ''''2%'''''
          '    ORDER BY sp.BusinessEntityID, c.LastName'
          ''');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert22'
        Lines.Strings = (
          'WITH EmployeeTemp (EmpID, LastName, FirstName, Phone,'
          '                   Address, City, StateProvince,'
          '                   PostalCode, CurrentFlag)'
          'AS (SELECT'
          '       e.BusinessEntityID, c.LastName, c.FirstName, pp.PhoneNumber,'
          '       a.AddressLine1, a.City, sp.StateProvinceCode,'
          '       a.PostalCode, e.CurrentFlag'
          '    FROM HumanResources.Employee e'
          '        INNER JOIN Person.BusinessEntityAddress AS bea'
          '        ON e.BusinessEntityID = bea.BusinessEntityID'
          '        INNER JOIN Person.Address AS a'
          '        ON bea.AddressID = a.AddressID'
          '        INNER JOIN Person.PersonPhone AS pp'
          '        ON e.BusinessEntityID = pp.BusinessEntityID'
          '        INNER JOIN Person.StateProvince AS sp'
          '        ON a.StateProvinceID = sp.StateProvinceID'
          '        INNER JOIN Person.Person as c'
          '        ON e.BusinessEntityID = c.BusinessEntityID'
          '    )'
          'INSERT INTO HumanResources.NewEmployee'
          '    SELECT EmpID, LastName, FirstName, Phone,'
          '           Address, City, StateProvince, PostalCode, CurrentFlag'
          '    FROM EmployeeTemp;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert23'
        Lines.Strings = (
          'INSERT TOP(5)INTO dbo.EmployeeSales'
          '    OUTPUT inserted.EmployeeID, inserted.FirstName,'
          '        inserted.LastName, inserted.YearlySales'
          '    SELECT sp.BusinessEntityID, c.LastName, c.FirstName, sp.SalesYTD'
          '    FROM Sales.SalesPerson AS sp'
          '    INNER JOIN Person.Person AS c'
          '        ON sp.BusinessEntityID = c.BusinessEntityID'
          '    WHERE sp.SalesYTD > 250000.00'
          '    ORDER BY sp.SalesYTD DESC;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert24'
        Lines.Strings = (
          'INSERT INTO dbo.EmployeeSales'
          '    OUTPUT inserted.EmployeeID, inserted.FirstName,'
          '        inserted.LastName, inserted.YearlySales'
          '    SELECT TOP (5) sp.BusinessEntityID, c.LastName, c.FirstName, sp.SalesYTD'
          '    FROM Sales.SalesPerson AS sp'
          '    INNER JOIN Person.Person AS c'
          '        ON sp.BusinessEntityID = c.BusinessEntityID'
          '    WHERE sp.SalesYTD > 250000.00'
          '    ORDER BY sp.SalesYTD DESC;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert25'
        Lines.Strings = (
          'INSERT INTO V1'
          '    VALUES (''Row 1'',1);'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert26'
        Lines.Strings = (
          'INSERT INTO @MyTableVar (LocationID, CostRate, ModifiedDate)'
          '    SELECT LocationID, CostRate, GETDATE()'
          '    FROM Production.Location'
          '    WHERE CostRate > 0;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert27'
        Lines.Strings = (
          'INSERT INTO MyLinkServer.AdventureWorks2012.HumanResources.Department (Name, GroupName)'
          'VALUES (N''Public Relations'', N''Executive General and Administration'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert28'
        Lines.Strings = (
          'INSERT INTO OPENDATASOURCE(''SQLNCLI'','
          '    ''Data Source= <server_name>; Integrated Security=SSPI'')'
          '    .AdventureWorks2012.HumanResources.Department (Name, GroupName)'
          '    VALUES (N''Standards and Methods'', ''Quality Assurance'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert29'
        Lines.Strings = (
          'INSERT INTO Sales.SalesHistory WITH (TABLOCK)'
          '    (SalesOrderID,'
          '     SalesOrderDetailID,'
          '     CarrierTrackingNumber,'
          '     OrderQty,'
          '     ProductID,'
          '     SpecialOfferID,'
          '     UnitPrice,'
          '     UnitPriceDiscount,'
          '     LineTotal,'
          '     rowguid,'
          '     ModifiedDate)'
          'SELECT * FROM Sales.SalesOrderDetail;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert30'
        Lines.Strings = (
          'INSERT INTO HumanResources.Department WITH (IGNORE_TRIGGERS) (Name, GroupName)'
          'SELECT b.Name, b.GroupName'
          'FROM OPENROWSET ('
          '    BULK ''C:SQLFilesDepartmentData.txt'','
          '    FORMATFILE = ''C:SQLFilesBulkloadFormatFile.xml'','
          '    ROWS_PER_BATCH = 15000)AS b ;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert31'
        Lines.Strings = (
          'INSERT INTO Production.Location WITH (XLOCK)'
          '(Name, CostRate, Availability)'
          'VALUES ( N''Final Inventory'', 15.00, 80.00);'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert32'
        Lines.Strings = (
          'INSERT Production.ScrapReason'
          '    OUTPUT INSERTED.ScrapReasonID, INSERTED.Name, INSERTED.ModifiedDate'
          '        INTO @MyTableVar'
          'VALUES (N''Operator error'', GETDATE());'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert33'
        Lines.Strings = (
          'INSERT INTO dbo.EmployeeSales (LastName, FirstName, CurrentSales)'
          '  OUTPUT INSERTED.LastName,'
          '         INSERTED.FirstName,'
          '         INSERTED.CurrentSales'
          '  INTO @MyTableVar'
          '    SELECT c.LastName, c.FirstName, sp.SalesYTD'
          '    FROM Sales.SalesPerson AS sp'
          '    INNER JOIN Person.Person AS c'
          '        ON sp.BusinessEntityID = c.BusinessEntityID'
          '    WHERE sp.BusinessEntityID LIKE ''2%'''
          '    ORDER BY c.LastName, c.FirstName;'
          ''
          ''
          ''
          ''
        )
      end    
      item
        Caption = 'Insert34'
        Lines.Strings = (
          'INSERT INTO Production.ZeroInventory (DeletedProductID, RemovedOnDate)'
          'SELECT ProductID, GETDATE()'
          'FROM'
          '(   MERGE Production.ProductInventory AS pi'
          '    USING (SELECT ProductID, SUM(OrderQty) FROM Sales.SalesOrderDetail AS sod'
          '           JOIN Sales.SalesOrderHeader AS soh'
          '           ON sod.SalesOrderID = soh.SalesOrderID'
          '           AND soh.OrderDate = ''20070401'''
          '           GROUP BY ProductID) AS src (ProductID, OrderQty)'
          '    ON (pi.ProductID = src.ProductID)'
          '    WHEN MATCHED AND pi.Quantity - src.OrderQty <= 0'
          '        THEN DELETE'
          '    WHEN MATCHED'
          '        THEN UPDATE SET pi.Quantity = pi.Quantity - src.OrderQty'
          '    OUTPUT $action, deleted.ProductID) AS Changes (Action, ProductID)'
          'WHERE Action = ''DELETE'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert35'
        Lines.Strings = (
          'INSERT INTO EmployeeTitles'
          '    SELECT EmployeeKey, LastName, Title'
          '    FROM ssawPDW.dbo.DimEmployee'
          '    WHERE EndDate IS NULL;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert36'
        Lines.Strings = (
          'INSERT INTO DimCurrency'
          'VALUES (500, N''C1'', N''Currency1'')'
          'OPTION ( LABEL = N''label1'' );'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert37'
        Lines.Strings = (
          'INSERT INTO DimCustomer (CustomerKey, CustomerAlternateKey,'
          '    FirstName, MiddleName, LastName )'
          'SELECT ProspectiveBuyerKey, ProspectAlternateKey,'
          '    FirstName, MiddleName, LastName'
          'FROM ProspectiveBuyer p JOIN DimGeography g ON p.PostalCode = g.PostalCode'
          'WHERE g.CountryRegionCode = ''FR'''
          'OPTION ( LABEL = ''Add French Prospects'', HASH JOIN);'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert38'
        Lines.Strings = (
          'INSERT INTO dbo.Table1 VALUES(1, 10.0), (1, 20.0);'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert39'
        Lines.Strings = (
          'INSERT INTO dbo.Table2 VALUES(1, 0.0);'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert40'
        Lines.Strings = (
          'INSERT @x VALUES (1, 10), (2, 20);'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert41'
        Lines.Strings = (
          'INSERT @y VALUES (1, 100),(2, 200);'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert42'
        Lines.Strings = (
          'INSERT INTO Person VALUES (1, ''Ron''), (2, ''David''), (3, ''Nancy'')'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert43'
        Lines.Strings = (
          'INSERT INTO City VALUES (1, ''Redmond'', ''Washington''), (2, ''Seattle'', ''Washington'')'
          ''
        )
      end    
      item
        Caption = 'Insert44'
        Lines.Strings = (
          'INSERT livesIn SELECT P.$node_id, C.$node_id, c'
          'FROM Person P, City C, (values (1,1, ''123 Avenue''), (2,2,''Main Street'')) v(a,b,c)'
          'WHERE P.id = a AND C.id = b'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert45'
        Lines.Strings = (
          'INSERT INTO #tmpdbs ([dbid], [dbname], [isdone])'
          'SELECT database_id, name, 0 FROM master.sys.databases (NOLOCK) WHERE is_read_only = 0 AND state = 0;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert46'
        Lines.Strings = (
          'INSERT INTO cci_target WITH (TABLOCK)'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert47'
        Lines.Strings = (
          'INSERT INTO dbo.FactInternetSales2'
          'SELECT ProductKey, OrderDateKey, DueDateKey, ShipDateKey'
          'FROM dbo.FactInternetSales;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert48'
        Lines.Strings = (
          'INSERT INTO dbo.doc_exd VALUES (-1) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert49'
        Lines.Strings = (
          'INSERT INTO dbo.doc_exz (column_a) VALUES (10) ;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert50'
        Lines.Strings = (
          'INSERT INTO Production.UnitMeasure (UnitMeasureCode, Name, ModifiedDate)'
          '  VALUES (''OC'', ''Ounces'', GETDATE());'
          ''
          ''
          ''
        )
      end    
      item
        Caption = 'Insert51'
        Lines.Strings = (
          'INSERT INTO #Test VALUES (N''OC'', N''Ounces'', GETDATE());'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert52'
        Lines.Strings = (
          'INSERT INTO #Test SELECT * FROM Production.UnitMeasure;'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert53'
        Lines.Strings = (
          'INSERT INTO @LocationTVP (LocationName, CostRate)'
          '    SELECT [Name], 0.00'
          '    FROM'
          '    [AdventureWorks2012].[Person].[StateProvince];'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert54'
        Lines.Strings = (
          'INSERT new_employees'
          '   (fname, minit, lname)'
          'VALUES'
          '   (''Karin'', ''F'', ''Josephs'');'
          ''
          ''
          ''
        )
      end    
      item
        Caption = 'Insert55'
        Lines.Strings = (
          'INSERT new_employees'
          '   (fname, minit, lname)'
          'VALUES'
          '   (''Pirkko'', ''O'', ''Koskitalo'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert56'
        Lines.Strings = (
          'INSERT INTO Purchasing.PurchaseOrderHeader (RevisionNumber, Status, EmployeeID,'
          'VendorID, ShipMethodID, OrderDate, ShipDate, SubTotal, TaxAmt, Freight)'
          'VALUES ('
          '2'
          ',3'
          ',261'
          ',1652'
          ',4'
          ',GETDATE()'
          ',GETDATE()'
          ',44594.55'
          ',3567.564'
          ',1114.8638 );'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert57'
        Lines.Strings = (
          'INSERT dbo.all_supplier_view VALUES (''1'', ''CaliforniaCorp''), (''5'', ''BraziliaLtd'')'
          ', (''231'', ''FarEast''), (''280'', ''NZ'')'
          ', (''321'', ''EuroGroup''), (''442'', ''UKArchip'')'
          ', (''475'', ''India''), (''521'', ''Afrique'');'
          ''
          ''
        )
      end    
      item
        Caption = 'Insert58'
        Lines.Strings = (
          'INSERT INTO #temptable'
          'VALUES (10);'
          ''
          ''
        )
      end    
      item
        Caption = 'Update1'
        Lines.Strings = (
          'UPDATE dbo.Table2'
          'SET dbo.Table2.ColB = dbo.Table2.ColB + dbo.Table1.ColB'
          'FROM dbo.Table2'
          '    INNER JOIN dbo.Table1'
          '    ON (dbo.Table2.ColA = dbo.Table1.ColA);'
          ''
          ''
        )
      end    
      item
        Caption = 'Update2'
        Lines.Strings = (
          'UPDATE dbo.Table1'
          'SET c2 = c2 + d2'
          'FROM dbo.Table2'
          'WHERE CURRENT OF abc;'
          ''
          ''
        )
      end    
      item
        Caption = 'Update3'
        Lines.Strings = (
          'UPDATE Cities'
          'SET Location = CONVERT(Point, ''12.3:46.2'')'
          'WHERE Name = ''Anchorage'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Update4'
        Lines.Strings = (
          'UPDATE Cities'
          'SET Location.SetXY(23.5, 23.5)'
          'WHERE Name = ''Anchorage'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Update5'
        Lines.Strings = (
          'UPDATE Cities'
          'SET Location.X = 23.5'
          'WHERE Name = ''Anchorage'';'
          ''
          ''
        )
      end    
      item
        Caption = 'Update6'
        Lines.Strings = (
          'WITH cte AS (SELECT * FROM @x)'
          'UPDATE x -- cte is referenced by the alias.'
          'SET Value = y.Value'
          'FROM cte AS x  -- cte is assigned an alias.'
          'INNER JOIN @y AS y ON y.ID = x.ID;'
          ''
          ''
        )
      end    
      item
        Caption = 'Update7'
        Lines.Strings = (
          'WITH cte AS (SELECT * FROM @x)'
          'UPDATE cte   -- cte is not referenced by the alias.'
          'SET Value = y.Value'
          'FROM cte AS x  -- cte is assigned an alias.'
          'INNER JOIN @y AS y ON y.ID = x.ID;'
          ''
          ''
        )
      end    
      item
        Caption = 'Update8'
        Lines.Strings = (
          'UPDATE STATISTICS Sales.SalesOrderDetail;'
          ''
          ''
        )
      end    
      item
        Caption = 'Update9'
        Lines.Strings = (
          'UPDATE STATISTICS Sales.SalesOrderDetail AK_SalesOrderDetail_rowguid;'
          ''
          ''
        )
      end    
      item
        Caption = 'Update10'
        Lines.Strings = (
          'UPDATE STATISTICS Production.Product(Products)'
          '    WITH FULLSCAN, NORECOMPUTE;'
          ''
          ''
        )
      end    
      item
        Caption = 'Update11'
        Lines.Strings = (
          'UPDATE Production.Product'
          '    SET ListPrice = ListPrice * 1.10'
          '    WHERE ProductNumber LIKE ''BK-%'';'
          ''
          ''
        )
      end>
    Left = 45
    Top = 312
  end
end
